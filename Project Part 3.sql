--DBST 651
--PROJECT PART 3
--JUSTIN HUGHES

--SET ECHO ON FOR THE SQL SCRIPT
set echo on;

--All Drop Statements (Tables with Foreign Keys Dropped First)
DROP VIEW Manufacturer_Products;
DROP VIEW Purchase_Orders;
Drop SEQUENCE seq_custid;
Drop SEQUENCE seq_ponumber;
DROP TRIGGER ORDERS_BEFORE_INSERT;
DROP TRIGGER CUSTOMER_UPDATE;
DROP TABLE INVENTORY;
DROP TABLE PO_CONTENTS;
DROP TABLE PRODUCTS;
DROP TABLE ORDERS;
DROP TABLE CUSTOMER;

--Create Statements for all 5 tables
CREATE TABLE CUSTOMER (
CUST_ID int NOT NULL PRIMARY KEY,
CUST_NAME varchar(255) NOT NULL UNIQUE,
CUST_ADDR varchar(255),
CUST_PHONE int,
CUST_FAX int
);

CREATE TABLE ORDERS (
ORDER_ID int NOT NULL PRIMARY KEY,
ORDER_DATE date,
VENDOR_NAME varchar(255),
CUST_ID int REFERENCES CUSTOMER(CUST_ID),
CUST_NAME varchar(255) REFERENCES CUSTOMER(CUST_NAME)
);

CREATE TABLE PO_CONTENTS (
VENDOR_ITEM varchar(255) NOT NULL UNIQUE,
PACK_SIZE int NOT NULL,
PACK_PRICE int,
QTY_ORDERED int NOT NULL,
ORDER_ID int REFERENCES ORDERS(ORDER_ID),
CONSTRAINT PK_PURCHASEORDER PRIMARY KEY (ORDER_ID,VENDOR_ITEM)
);

--Holds Generic Information for Products
CREATE TABLE PRODUCTS (
PRODUCT_ID varchar (255) NOT NULL PRIMARY KEY,
PRODUCT_NAME varchar(255) NOT NULL UNIQUE,
CPT_CODE int,
MANUFACTURER varchar (255) NOT NULL,
STRENGTH varchar (255),
FORM varchar(255)
);

--Holds Specific Information for Inventory
CREATE TABLE INVENTORY (
NDC_NUM int NOT NULL,
QTYONHAND int,
REORDER_POINT int,
LOT_NUM varchar(255),
PRODUCT_ID varchar (255) REFERENCES PRODUCTS(PRODUCT_ID),
ORDER_ID int REFERENCES ORDERS(ORDER_ID),
PRODUCT_NAME varchar(255) REFERENCES PRODUCTS(PRODUCT_NAME),
CONSTRAINT PK_INVITEM PRIMARY KEY (ORDER_ID,NDC_NUM,LOT_NUM)
);

--Creating Indexes for Foreign and Natural Keys, and anything containing a name
CREATE INDEX VENDORNAME
ON ORDERS(VENDOR_NAME);

CREATE INDEX CUSTOMERNAME
ON ORDERS(CUST_NAME);

CREATE INDEX PURCHASEORDER
ON PO_CONTENTS(ORDER_ID);

CREATE INDEX MANUFACTURER
ON PRODUCTS(MANUFACTURER);

CREATE INDEX NDCNUM
ON INVENTORY(NDC_NUM);

CREATE INDEX INVPRODUCTNAME
ON INVENTORY(PRODUCT_NAME);

CREATE INDEX LOTNUM
ON INVENTORY(LOT_NUM);

CREATE INDEX ONHANDINVENTORY
ON INVENTORY(NDC_NUM,QTYONHAND);

-- View to allow customer to search all products from a single manufacturer
CREATE VIEW Manufacturer_Products AS
SELECT DISTINCT MANUFACTURER,PRODUCT_NAME AS PRODUCTNAME
FROM PRODUCTS;

--View to allows customer to search all PO's placed for a particular customer
CREATE VIEW Purchase_Orders AS
SELECT DISTINCT CUST_NAME,ORDER_ID,ORDER_DATE
FROM ORDERS;

--Sequence for Customer ID
CREATE SEQUENCE seq_custid
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

--Sequence for Order Number
CREATE SEQUENCE seq_ponumber
MINVALUE 1
START WITH 1
INCREMENT BY 1
CACHE 10;

--Trigger to update ORDER-DATE field in the ORDERS column when creating a new PO
CREATE TRIGGER ORDERS_BEFORE_INSERT
BEFORE INSERT
  ON ORDERS
  FOR EACH ROW
  
BEGIN
--Update ORDER-DATE field to current system date
:new.ORDER_DATE := sysdate;

end;

/

--Trigger to updates the Customer ID and Customer name in Orders Table when the Customer table is updated
CREATE TRIGGER CUSTOMER_UPDATE
AFTER UPDATE 
ON CUSTOMER
FOR EACH ROW

BEGIN
UPDATE ORDERS
SET CUST_ID = :new.CUST_ID, CUST_NAME = :new.CUST_NAME
WHERE CUST_ID = :old.CUST_ID;

END;
/

--Select Statements for All Tables to Check Content
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM PO_CONTENTS;
SELECT * FROM PRODUCTS;
SELECT * FROM INVENTORY;


